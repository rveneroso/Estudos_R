setwd("~/Estudos_R/iaexpert/Machine Learning e Data Science com R")
base = read.csv('credit_data.csv')
source("~/.active-rstudio-document", echo=TRUE)
base = read.csv('.\credit_data.csv')
base = read.csv('./credit_data.csv')
base = read.csv('credit_data.csv')
base = read.csv('classificação/credit_data.csv')
base$clientid = NULL
View(base)
sumary(base)
summary(base)
View(base)
base[base$age<0 ,]
base[base$age<0 & !is.null(base$age),]
# a condição do filtro.
base[base$age<0 & !is.na(base$age),]
# a condição do filtro.
base[base$age<0 & !is.na(base$age),]
base = base[base$age > 0,]
View(base)
base = read.csv('classificação/credit_data.csv')
# Remove o atributo clientId do dataframe
base$clientid = NULL
# Filtra as linhas nas quais o atributo age é menor que zero e não pode ser nulo.
# Após a vírgula devem vir os atributos que se deseja visualizar no filtro. Em R os índices dos atributos começam em 1.
# Como aqui não é informado nenhum atributo específico, então serão mostrados todos os atributos das linhas que satisfazem
# a condição do filtro.
base[base$age<0 & !is.na(base$age),]
idade_media = men(base$age, na.rm = TRUE)
# Quarta: preencher os valores faltantes com a idade média do dataframe.
idade_media = mean(base$age, na.rm = TRUE)
# Quarta: preencher os valores faltantes com a idade média do dataframe.
idade_media = mean(base$age[base$age > 0], na.rm = TRUE)
base$age[base$age > 0]
base$age[base$age > 0 | is.na(base$age)] = mean(base$age[base$age > 0], na.rm = TRUE)
View(base)
# Lembrando que o diretório de trabalho é /home/rveneroso/Estudos_R/iaexpert/Machine Learning e Data Science com R
# Lê o arquivo credit_data.csv e carrega seu conteúdo na variável base
base = read.csv('classificação/credit_data.csv')
# Remove o atributo clientId do dataframe
base$clientid = NULL
base$age[base$age < 0 | is.na(base$age)] = mean(base$age[base$age > 0], na.rm = TRUE)
View(base)
mean(base$age)
# Lembrando que o diretório de trabalho é /home/rveneroso/Estudos_R/iaexpert/Machine Learning e Data Science com R
# Lê o arquivo credit_data.csv e carrega seu conteúdo na variável base
base = read.csv('classificação/credit_data.csv')
# Remove o atributo clientId do dataframe
base$clientid = NULL
# Uma outra forma de se fazer a atualização seria:
base$age = ifelse(base$age < 0, 40.92, base$age)
View(base)
# Uma outra forma de se fazer a atualização seria:
base$age = ifelse(base$age < 0, 40.92, base$age)
# O R possui uma função que realiza o escalonamento de todos os atributos em uma base de dados
base = scale(base)
View(base)
base = read.csv('classificação/credit_data.csv')
base$clientid = NULL
base$age[base$age < 0 | is.na(base$age)] = mean(base$age[base$age > 0], na.rm = TRUE)
# base = scale(base)
View(base)
base = read.csv('classificação/credit_data.csv')
base$clientid = NULL
base$age[base$age < 0 | is.na(base$age)] = mean(base$age[base$age > 0], na.rm = TRUE)
# O R tem uma função que faz o escalonamento de toda a base de uma só vez. Porém, o escalonamento não deve ser aplicado
# no atributo meta pois, além de não fazer sentido, dificulta o entendimento.
# Portanto, serão escalonados os atributos 1 a 3 em todas as linhas.
base[, 1:3] = scale(base)
base = read.csv('classificação/credit_data.csv')
base$clientid = NULL
base$age[base$age < 0 | is.na(base$age)] = mean(base$age[base$age > 0], na.rm = TRUE)
# O R tem uma função que faz o escalonamento de toda a base de uma só vez. Porém, o escalonamento não deve ser aplicado
# no atributo meta pois, além de não fazer sentido, dificulta o entendimento.
# Portanto, serão escalonados os atributos 1 a 3 em todas as linhas.
base[, 1:3] = scale(base)
# O R tem uma função que faz o escalonamento de toda a base de uma só vez. Porém, o escalonamento não deve ser aplicado
# no atributo meta pois, além de não fazer sentido, dificulta o entendimento.
# Portanto, serão escalonados os atributos 1 a 3 em todas as linhas.
base[, 1:3] = scale(base[, 1:3])
View(base)
