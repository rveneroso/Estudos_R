setwd("~/Estudos_R/iaexpert/Machine Learning e Data Science com R/meus_estudos/Parte2_Regressao")
setwd("~/Estudos_R/iaexpert/Machine Learning e Data Science com R/meus_estudos/Parte2_Regressao/Regressao_Linear")
base = read.csv('plano_saude.csv')
cor(base$idade, base$custo)
regressor = lm(formula = custo ~ idade, data = base)
summary(regressor)
b0 = regressor$coefficients[1]
b1 = regressor$coefficients[2]
cr = summary(regressor)$adj.r.squared
previsoes = predict(regressor, newdata = base[-2])
#install.packages('ggplot2')
library(ggplot2)
ggplot() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = base$idade, y = previsoes), colour = 'red') +
ggtitle('Idade x custo') + xlab('Idade') + ylab('Custo')
idade = c(40)
df = data.frame(idade)
previsao1 = predict(regressor, newdata = df)
previsao2 = b0 + b1 * 40
base = read.csv('plano_saude.csv')
View(base)
# Determina a correlação entre os dois atributos
cor(base$idade, base$custo)
# Linear model
regressor = lm(formula = custo ~ idade, data = base)
View(regressor)
View(base)
summary(regressor)
cr = summary(regressor)$adj.r.squared
library(ggplot2)
ggplot() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = base$idade, y = previsoes), colour = 'red') +
ggtitle('Idade x custo') + xlab('Idade') + ylab('Custo')
base = read.csv('plano_saude.csv')
# Determina a correlação entre os dois atributos. Quanto maior o valor, maior a correlação entre os dois atributos.
cor(base$idade, base$custo)
# Linear model. Essa função faz o escalonamento de atributos de forma automática.
regressor = lm(formula = custo ~ idade, data = base)
summary(regressor)
b0 = regressor$coefficients[1]
b1 = regressor$coefficients[2]
cr = summary(regressor)$adj.r.squared
previsoes = predict(regressor, newdata = base[-2])
#install.packages('ggplot2')
library(ggplot2)
ggplot() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = base$idade, y = previsoes), colour = 'red') +
ggtitle('Idade x custo') + xlab('Idade') + ylab('Custo')
base = read.csv('house_prices.csv')
base = read.csv('house_prices.csv')
library(caTools)
set.seed(1)
divisao = sample.split(base$price, SplitRatio = 0.70)
base_treinamento = subset(base, divisao == TRUE)
base_teste = subset(base, divisao == FALSE)
install.packages('miscTools')
base = read.csv('house_prices.csv')
library(caTools)
set.seed(1)
divisao = sample.split(base$price, SplitRatio = 0.70)
base_treinamento = subset(base, divisao == TRUE)
base_teste = subset(base, divisao == FALSE)
regressor = lm(formula = price ~ sqft_living, data = base_treinamento)
summary(regressor)
previsoes_treinamento = predict(regressor, newdata = base_treinamento[6])
library(ggplot2)
ggplot() + geom_point(aes(x = base_treinamento$sqft_living, y = base_treinamento$price), colour = 'blue') +
geom_line(aes(x = base_treinamento$sqft_living, y = previsoes_treinamento), colour = 'red')
previsoes_teste = predict(regressor, newdata = base_teste[6])
resultado = abs(base_teste[3] - previsoes_teste)
mean(resultado[['price']])
# install.packages('miscTools')
library(miscTools)
cr = rSquared(base_teste[['price']], resid = base_teste[['price']] - previsoes_teste)
base = read.csv('house_prices.csv')
base$id = NULL
base$date = NULL
base$sqft_living15 = NULL
base$sqft_lot15 = NULL
base$sqft_basement = NULL
library(caTools)
set.seed(1)
divisao = sample.split(base$price, SplitRatio = 0.70)
base_treinamento = subset(base, divisao == TRUE)
base_teste = subset(base, divisao == FALSE)
regressor = lm(formula = price ~ ., data = base_treinamento)
summary(regressor)
previsoes = predict(regressor, newdata = base_teste[-1])
mean(abs(base_teste[['price']] - previsoes))
library(miscTools)
cc = rSquared(base_teste[['price']], resid = base_teste[['price']] - previsoes)
base = read.csv('house_prices.csv')
base$id = NULL
base$date = NULL
base$sqft_living15 = NULL
base$sqft_lot15 = NULL
base$sqft_basement = NULL
base = read.csv('house_prices.csv')
base$id = NULL
base$date = NULL
base$sqft_living15 = NULL
base$sqft_lot15 = NULL
base$sqft_basement = NULL
base = read.csv('house_prices.csv')
base$id = NULL
base$date = NULL
base$sqft_living15 = NULL
base$sqft_lot15 = NULL
base$sqft_basement = NULL
library(caTools)
set.seed(1)
divisao = sample.split(base$price, SplitRatio = 0.70)
base_treinamento = subset(base, divisao == TRUE)
base_teste = subset(base, divisao == FALSE)
regressor = lm(formula = price ~ ., data = base_treinamento)
summary(regressor)
previsoes = predict(regressor, newdata = base_teste[-1])
mean(abs(base_teste[['price']] - previsoes))
library(miscTools)
cc = rSquared(base_teste[['price']], resid = base_teste[['price']] - previsoes)
setwd("~/Estudos_R/iaexpert/Machine Learning e Data Science com R/meus_estudos/Parte2_Regressao/Regressao_Polinomial")
base = read.csv('plano_saude2.csv')
# regressão linear simples
regressor1 = lm(formula = custo ~ idade, data = base)
summary(regressor1)
base = read.csv('plano_saude2.csv')
# regressão linear simples
regressor1 = lm(formula = custo ~ idade, data = base)
summary(regressor1)
cc1 = summary(regressor1)$r.squared
idade = c(40)
df = data.frame(idade)
previsao1 = predict(regressor1, newdata = df)
library(ggplot2)
ggplot() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = base$idade, y = predict(regressor1, newdata = base[-2])), colour = 'red')
# regressão polinomial
base2 = base
base2$idade2 = base2$idade^2
base2$idade3 = base2$idade^3
regressor2 = lm(formula = custo ~ ., data = base2)
summary(regressor2)
cc2 = summary(regressor2)$r.squared
# previsão
idade = c(40)
idade2 = c(40^2)
idade3 = c(40^3)
df2 = data.frame(idade, idade2, idade3)
previsao2 = predict(regressor2, newdata = df2)
ggplot() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = base$idade, y = predict(regressor2, newdata = base2[-2])), colour = 'red')
setwd("~/Estudos_R/iaexpert/Machine Learning e Data Science com R/meus_estudos/Parte2_Regressao/Regressao_Arvores_Decisao")
base = read.csv('plano_saude2.csv')
base = read.csv('plano_saude2.csv')
base = read.csv('plano_saude2.csv')
#install.packages('rpart')
library(rpart)
regressor = rpart(formula = custo ~ idade, data = base, control = rpart.control(minsplit = 1))
summary(regressor)
previsoes = predict(regressor, newdata = base[-2])
previsoes
library(miscTools)
cc = rSquared(base[['custo']], resid = base[['custo']] - previsoes)
library(ggplot2)
ggplot() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = base$idade, y = previsoes), colour = 'red')
x_teste = seq(min(base$idade), max(base$idade), 0.1)
previsoes2 = predict(regressor, newdata = data.frame(idade = x_teste))
ggplot() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = x_teste, y = previsoes2), colour = 'red')
# previsao
df = data.frame(idade = c(58))
previsao = predict(regressor, newdata = df)
