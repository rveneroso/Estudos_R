base = read.csv('house_prices.csv')
base$id = NULL
base$date = NULL
base$sqft_living15 = NULL
base$sqft_lot15 = NULL
base$sqft_basement = NULL
library(caTools)
set.seed(1)
divisao = sample.split(base$price, SplitRatio = 0.70)
base_treinamento = subset(base, divisao == TRUE)
base_teste = subset(base, divisao == FALSE)
library(rpart)
regressor = rpart(formula = price ~ ., data = base_treinamento)
summary(regressor)
previsoes_treinamento = predict(regressor, newdata = base_treinamento[-1])
library(miscTools)
cc_treinamento = rSquared(base_treinamento[['price']], resid = base_treinamento[['price']] - previsoes_treinamento)
previsoes_teste = predict(regressor, newdata = base_teste[-1])
mean(abs(base_teste[['price']] - previsoes_teste))
cc_teste = rSquared(base_teste[['price']], resid = base_teste[['price']] - previsoes_teste)
base = read.csv('house_prices.csv')
base$id = NULL
base$date = NULL
base$sqft_living15 = NULL
base$sqft_lot15 = NULL
base$sqft_basement = NULL
base = read.csv('house_prices.csv')
setwd("~/Estudos_R/iaexpert/Machine Learning e Data Science com R/meus_estudos/Parte2_Regressao/Regressao_Arvores_Decisao")
base = read.csv('house_prices.csv')
base$id = NULL
base$date = NULL
base$sqft_living15 = NULL
base$sqft_lot15 = NULL
base$sqft_basement = NULL
library(caTools)
set.seed(1)
divisao = sample.split(base$price, SplitRatio = 0.70)
base_treinamento = subset(base, divisao == TRUE)
base_teste = subset(base, divisao == FALSE)
library(rpart)
regressor = rpart(formula = price ~ ., data = base_treinamento)
summary(regressor)
previsoes_treinamento = predict(regressor, newdata = base_treinamento[-1])
library(miscTools)
cc_treinamento = rSquared(base_treinamento[['price']], resid = base_treinamento[['price']] - previsoes_treinamento)
previsoes_teste = predict(regressor, newdata = base_teste[-1])
mean(abs(base_teste[['price']] - previsoes_teste))
cc_teste = rSquared(base_teste[['price']], resid = base_teste[['price']] - previsoes_teste)
setwd("~/Estudos_R/iaexpert/Machine Learning e Data Science com R/meus_estudos/Parte2_Regressao/Regressao_Random_Forest")
base = read.csv('plano_saude2.csv')
#install.packages('randomForest')
library(randomForest)
regressor  = randomForest(x = base[1], y = base$custo, ntree = 500)
summary(regressor)
previsoes = predict(regressor, newdata = base[-2])
library(miscTools)
cc = rSquared(base[['custo']], resid = base[['custo']] - previsoes)
x_teste = seq(min(base$idade), max(base$idade), 0.01)
previsoes2 = predict(regressor, newdata = data.frame(idade = x_teste))
ggplot() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = x_teste, y = previsoes2), colour = 'red')
df = data.frame(idade = c(40))
previsao = predict(regressor, newdata = df)
install.packages('randomForest')
install.packages("randomForest")
base = read.csv('plano_saude2.csv')
#install.packages('randomForest')
library(randomForest)
regressor  = randomForest(x = base[1], y = base$custo, ntree = 500)
summary(regressor)
previsoes = predict(regressor, newdata = base[-2])
library(miscTools)
cc = rSquared(base[['custo']], resid = base[['custo']] - previsoes)
x_teste = seq(min(base$idade), max(base$idade), 0.01)
previsoes2 = predict(regressor, newdata = data.frame(idade = x_teste))
ggplot() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = x_teste, y = previsoes2), colour = 'red')
df = data.frame(idade = c(40))
previsao = predict(regressor, newdata = df)
base = read.csv('plano_saude2.csv')
#install.packages('randomForest')
library(randomForest)
regressor  = randomForest(x = base[1], y = base$custo, ntree = 500)
summary(regressor)
previsoes = predict(regressor, newdata = base[-2])
library(miscTools)
cc = rSquared(base[['custo']], resid = base[['custo']] - previsoes)
x_teste = seq(min(base$idade), max(base$idade), 0.01)
previsoes2 = predict(regressor, newdata = data.frame(idade = x_teste))
ggplot() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = x_teste, y = previsoes2), colour = 'red')
ggplot() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = x_teste, y = previsoes2), colour = 'red')
ggplot2() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = x_teste, y = previsoes2), colour = 'red')
#install.packages('randomForest')
library(randomForest)
ggplot() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = x_teste, y = previsoes2), colour = 'red')
library(ggplot2)
ggplot2() + geom_point(aes(x = base$idade, y = base$custo), colour = 'blue') +
geom_line(aes(x = x_teste, y = previsoes2), colour = 'red')
